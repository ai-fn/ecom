services:

  db:
    build:
      context: .
      dockerfile: database/Dockerfile.db
    restart: always
    volumes:
      - ./data/db/${POSTGRES_HOST}:/var/lib/postgresql/data
      - ./data/db/backups/${POSTGRES_HOST}:/backups
    env_file:
      - .env

  cache:
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data
    ports:
      - "${REDIS_PORT}:6379"

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:${DJANGO_PORT}
    restart: always
    volumes:
      - .:/code
    depends_on:
      - db
    ports:
      - "${DJANGO_PORT}:8000"
    env_file:
      - .env
      
  celery:
    build: .
    command: celery -A megashop worker --loglevel=info --beat
    restart: always
    volumes:
      - .:/code
    depends_on:
      - db
      - cache
    env_file:
      - .env

  celerybeat:
    build: .
    command: celery -A megashop beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    restart: always
    volumes:
      - .:/code
      - ./data/celerybeat:/var/lib/celerybeat  # Папка для хранения файлов состояния планировщика
    depends_on:
      - db
      - cache
    env_file:
      - .env
  
  elasticsearch:
    image: elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_TRANSPORT_PORT}:9300"
    restart: always
    env_file:
      - .env
    mem_limit: 2g  # Установите лимит памяти, например, в 2 гигабайта