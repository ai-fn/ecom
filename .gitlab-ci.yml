stages:
  - test
  - deploy
  - dev-test
  - dev-deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - echo "Configuring SSH..."
  - mkdir -p ~/.ssh/
  - echo "$SSH_KEY"
  - echo "$SSH_HOST"
  - echo "$SSH_KEY" > ~/.ssh/gitlab
  - echo "$SSH_KEY" > ~/.ssh/gitlab
  - chmod 600 ~/.ssh/gitlab
  - echo "Host target-shop" > ~/.ssh/shop-backend-config
  - echo "  HostName $SSH_HOST" >> ~/.ssh/shop-backend-config
  - echo "  User $SSH_USER" >> ~/.ssh/shop-backend-config
  - echo "  IdentityFile ~/.ssh/gitlab" >> ~/.ssh/shop-backend-config
  - echo "  LogLevel ERROR" >> ~/.ssh/shop-backend-config
  - echo "  StrictHostKeyChecking no" >> ~/.ssh/shop-backend-config

test:
  stage: test
  tags:
    - backend
  only:
    - main

  script:
    - set -e
    - echo "Running tests..."
    - ssh -F ~/.ssh/shop-backend-config target-shop "
      if [ -d shop-backend-test ]; then 
        cd shop-backend-test && git pull https://${GITLAB_USER}:${GITLAB_TOKEN}@gitlab.altawest.ru/${CI_PROJECT_PATH}.git; 
      else
        git clone https://${GITLAB_USER}:${GITLAB_TOKEN}@gitlab.altawest.ru/${CI_PROJECT_PATH}.git shop-backend-test && cd shop-backend-test; 
      fi &&
      mkdir -p ./data/elasticsearch &&
      sudo chown -R 1000:1000 ./data/elasticsearch &&
      sudo chmod -R 755 ./data/elasticsearch &&
      docker compose -f docker-compose-test.yml up --build -d &&
      docker compose -f docker-compose-test.yml exec web python manage.py migrate --settings=megashop.settings.local &&
      docker compose -f docker-compose-test.yml logs web &&
      docker compose -f docker-compose-test.yml exec web ./wait-for-it.sh elasticsearch:9200 --timeout=120 --strict -- python manage.py test --settings=megashop.settings.local --no-input || exit 1"
  after_script:
    - ssh -F ~/.ssh/shop-backend-config target-shop "docker compose -f ./shop-backend-test/docker-compose-test.yml down"

deploy:
  stage: deploy
  tags:
    - backend
  only:
    - main
  script:
    - set -e
    - echo "Running deploy..."
    - ssh -F ~/.ssh/shop-backend-config target-shop "cd shop-backend/ &&
      docker compose -f docker-compose-traefik.yml down --timeout 30 &&
      git pull https://${GITLAB_USER}:${GITLAB_TOKEN}@gitlab.altawest.ru/${CI_PROJECT_PATH}.git &&
      docker compose -f docker-compose-traefik.yml build &&
      docker compose -f docker-compose-traefik.yml up -d --force-recreate &&
      docker compose exec web python manage.py migrate --settings=megashop.settings.prod"
  needs:
    - test

dev-test:
  stage: dev-test
  tags:
    - backend
  only:
    - dev

  script:
    - echo "Running dev-tests..."
    - ssh -F ~/.ssh/shop-backend-config target-shop "
      if [ -d dev-shop-backend-test ]; then
      cd dev-shop-backend-test && git pull https://${GITLAB_USER}:${GITLAB_TOKEN}@gitlab.altawest.ru/${CI_PROJECT_PATH}.git;
      else
      git clone https://${GITLAB_USER}:${GITLAB_TOKEN}@gitlab.altawest.ru/${CI_PROJECT_PATH}.git dev-shop-backend-test && cd dev-shop-backend-test;
      fi &&
      mkdir -p ./data/elasticsearch &&
      sudo chown -R 1000:1000 ./data/elasticsearch &&
      sudo chmod -R 755 ./data/elasticsearch &&
      docker compose -f docker-compose-test.yml up --build -d &&
      docker compose -f docker-compose-test.yml exec web python manage.py migrate --settings=megashop.settings.local &&
      docker compose -f docker-compose-test.yml logs web &&
      docker compose -f docker-compose-test.yml exec web ./wait-for-it.sh elasticsearch:9200 --timeout=120 --strict -- python manage.py test --settings=megashop.settings.local --no-input || exit 1"
  after_script:
    - ssh -F ~/.ssh/shop-backend-config target-shop "docker compose -f ./dev-shop-backend-test/docker-compose-test.yml down"

dev-deploy:
  stage: dev-deploy
  tags:
    - backend
  only:
    - dev
  script:
    - set -e
    - echo "Running dev-deploy..."
    - ssh -F ~/.ssh/shop-backend-config target-shop "cd dev-shop-backend/ &&
      docker compose -f docker-compose-traefik.yml down --timeout 30 &&
      git pull https://${GITLAB_USER}:${GITLAB_TOKEN}@gitlab.altawest.ru/${CI_PROJECT_PATH}.git &&
      docker compose -f docker-compose-traefik.yml build &&
      docker compose -f docker-compose-traefik.yml up -d --force-recreate &&
      docker compose exec web python manage.py migrate --settings=megashop.settings.local"
  needs:
    - dev-test
