version: '3.8'

services:
  db:
    image: postgres:14.5
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - internal

  cache:
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data
    networks:
      - internal

  web:
    build: .
    command: [ "./wait-for-it.sh", "db:5432", "--strict", "--timeout=30", "--", "gunicorn", "--workers=3", "--bind=0.0.0.0:8000", "megashop.wsgi:application"]
    restart: always
    volumes:
      - .:/code
    env_file:
      - .env
    
    networks:
      - traefik
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.megashop.loadbalancer.server.port=8000"
      - "traefik.http.routers.megashop.rule=Host(`dev-api-shop.altawest.ru`)"
      - "traefik.http.routers.megashop.entrypoints=http"
      - "traefik.http.routers.megashop-secure.rule=Host(`dev-api-shop.altawest.ru`)"
      - "traefik.http.routers.megashop-secure.entrypoints=https"
      - "traefik.http.routers.megashop-secure.tls.certresolver=traefik-resolver"
    depends_on:
      - db
    logging:
      driver: loki
      options:
        loki-url: http://147.45.106.166:3100/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=dev-megashop-backend,environment=development
    
  golang:
    build:
        context: .
        dockerfile: go.Dockerfile
    volumes:
      - .:/code
    depends_on:
      - db
      - web
    environment:
      - POSTGRES_HOST=db
    env_file:
      - .env
    
    networks:
      - traefik
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.megashop.loadbalancer.server.port=8080"
      - "traefik.http.routers.megashop.rule=Host(`dev-api-shop.altawest.ru`)"
      - "traefik.http.routers.megashop.entrypoints=http"
      - "traefik.http.routers.megashop-secure.rule=Host(`dev-api-shop.altawest.ru`)"
      - "traefik.http.routers.megashop-secure.entrypoints=https"
      - "traefik.http.routers.megashop-secure.tls.certresolver=traefik-resolver"

    logging:
      driver: loki
      options:
        loki-url: http://147.45.106.166:3100/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=dev-megashop-backend,environment=development

  celery:
    build: .
    command: celery -A megashop worker --loglevel=info --pool=solo
    restart: always
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - cache
    networks:
      - internal

  celerybeat:
    build: .
    command: celery -A megashop beat --loglevel=debug
    restart: always
    volumes:
      - .:/code
      - ./data/celerybeat:/var/lib/celerybeat  # Папка для хранения файлов состояния планировщика
    env_file:
      - .env
    depends_on:
      - db
      - cache
    networks:
      - internal
    
  prometheus:
    image: prom/prometheus:v2.30.0
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - web
      - db
      - cache
    networks:
      - traefik
      - internal
      
  elasticsearch:
    image: elasticsearch:7.17.0
    environment:
      - "discovery.type=single-node"
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: always

    mem_limit: 2g  # Установите лимит памяти, например, в 2 гигабайта
    networks:
      - traefik
      - internal
      
networks:
  traefik:
    external: true
  internal:
    driver: bridge
