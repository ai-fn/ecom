services:
  db:
    build:
      context: .
      dockerfile: database/Dockerfile.db
    restart: always
    volumes:
      - ./data/db/${POSTGRES_HOST}:/var/lib/postgresql/data
      - ./data/db/backups/${POSTGRES_HOST}:/backups
    env_file:
      - .env

  cache:
    image: redis:7.0.4
    restart: always
    volumes:
      - ./data/cache:/data
    networks:
      - internal
    ports:
      - "${REDIS_PORT}:6379"

  web:
    build: .
    command: [ "./wait-for-it.sh", "${POSTGRES_HOST}:5432", "--strict", "--timeout=30", "--", "gunicorn", "--workers=3", "--bind=0.0.0.0:8000", "megashop.wsgi:application"]
    restart: always
    volumes:
      - .:/code
    env_file:
      - .env
    
    networks:
      - traefik
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.services.${APP_NAME}.loadbalancer.server.port=8000"
      - "traefik.http.routers.${APP_NAME}.rule=Host(`${BACKEND_HOST}`)"
      - "traefik.http.routers.${APP_NAME}.entrypoints=http"
      - "traefik.http.routers.${APP_NAME}-secure.rule=Host(`${BACKEND_HOST}`)"
      - "traefik.http.routers.${APP_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.${APP_NAME}-secure.tls.certresolver=traefik-resolver"
      - "traefik.http.middlewares.${APP_NAME}-ratelimit.rateLimit.average=30"
      - "traefik.http.middlewares.${APP_NAME}-ratelimit.rateLimit.burst=40"
      - "traefik.http.routers.${APP_NAME}.middlewares=${APP_NAME}-ratelimit"

    depends_on:
      - db
    logging:
      driver: loki
      options:
        loki-url: http://147.45.106.166:3100/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=dev-${APP_NAME}-backend,environment=development

  celery:
    build: .
    command: celery -A megashop worker --loglevel=info --beat
    restart: always
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - cache
    networks:
      - internal

  celerybeat:
    build: .
    command: celery -A megashop beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    restart: always
    volumes:
      - .:/code
      - ./data/celerybeat:/var/lib/celerybeat
    env_file:
      - .env
    depends_on:
      - db
      - cache
    networks:
      - internal

  prometheus:
    image: prom/prometheus:v2.30.0
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"
    depends_on:
      - web
      - db
      - cache
    networks:
      - traefik
      - internal

  elasticsearch:
    image: elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_TRANSPORT_PORT}:9300"
    restart: always
    env_file:
      - .env
    mem_limit: 2g
    networks:
      - traefik
      - internal

networks:
  traefik:
    external: true
  internal:
    driver: bridge
